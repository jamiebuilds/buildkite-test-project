steps:
  - name: ":jest: Test"
    command:
      - echo "+++ yarn test"
      - yarn install --pure-lockfile
      - yarn test --coverage
    plugins:
      docker#v1.4.0:
        image: node:10
        mounts:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/buildkite/builds:/var/buildkite/builds
          - /usr/local/share/.cache/yarn/v2:/usr/local/share/.cache/yarn/v2
  - name: ":eslint: Lint"
    command:
      - echo "+++ yarn lint"
      - yarn install --pure-lockfile
      - yarn lint
    plugins:
      docker#v1.4.0:
        image: node:10
        mounts:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/buildkite/builds:/var/buildkite/builds
          - /usr/local/share/.cache/yarn/v2:/usr/local/share/.cache/yarn/v2
  - name: ":flowtype: Typecheck"
    command:
      - echo "+++ yarn typecheck"
      - yarn install --pure-lockfile
      - apt-get update -qq && apt-get install -qy libelf1
      - yarn typecheck
    plugins:
      docker#v1.4.0:
        image: node:10
        mounts:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/buildkite/builds:/var/buildkite/builds
          - /usr/local/share/.cache/yarn/v2:/usr/local/share/.cache/yarn/v2
    artifact_paths:
      - "./flow.log"
  - name: ":globe_with_meridians: Build"
    command:
      - echo "+++ yarn build"
      - yarn install --pure-lockfile
      - yarn build
    plugins:
      docker#v1.4.0:
        image: node:10
        mounts:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/buildkite/builds:/var/buildkite/builds
          - /usr/local/share/.cache/yarn/v2:/usr/local/share/.cache/yarn/v2
