steps:
  - name: ":jest: Test"
    command:
      - ./.buildkite/setup.sh
      - bolt install --pure-lockfile
      - 'echo "+++ :jest: yarn test"'
      - yarn test --coverage
    plugins:
      docker#v1.4.0:
        image: node:10
        mounts:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/buildkite/builds:/var/buildkite/builds
          - /usr/local/share/.cache/yarn/v2:/usr/local/share/.cache/yarn/v2
    artifact_paths:
      - "coverage/**/*"
  - name: ":eslint: Lint"
    command:
      - ./.buildkite/setup.sh
      - bolt install --pure-lockfile
      - 'echo "+++ :eslint: yarn lint"'
      - yarn lint
    plugins:
      docker#v1.4.0:
        image: node:10
        mounts:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/buildkite/builds:/var/buildkite/builds
          - /usr/local/share/.cache/yarn/v2:/usr/local/share/.cache/yarn/v2
  - name: ":typescript: Typecheck"
    command:
      - ./.buildkite/setup.sh
      - bolt install --pure-lockfile
      - 'echo "+++ :typescript: yarn typecheck"'
      - yarn typecheck
    plugins:
      docker#v1.4.0:
        image: node:10
        mounts:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/buildkite/builds:/var/buildkite/builds
          - /usr/local/share/.cache/yarn/v2:/usr/local/share/.cache/yarn/v2
  - name: ":babel: Build"
    command:
      - ./.buildkite/setup.sh
      - bolt install --pure-lockfile
      - 'echo "+++ :babel: yarn build"'
      - yarn build --cache-dir /usr/local/share/.cache/parcel/v1
    plugins:
      docker#v1.4.0:
        image: node:10
        mounts:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/buildkite/builds:/var/buildkite/builds
          - /usr/local/share/.cache/yarn/v2:/usr/local/share/.cache/yarn/v2
          - /usr/local/share/.cache/parcel/v1:/usr/local/share/.cache/parcel/v1
    artifact_paths:
      - "dist/**/*"
